/*
 * Copyright (C) 2012 Romain Reuillon
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.openmole.plugin.task.external

import monocle.{Lens, Focus}
import org.openmole.plugin.task.external.External._

/**
 * Builder for task using external files or directories
 *
 * Use it to copy files or directories, from the dataflow or from your computer in the task
 * workspace and prior to the task execution and to get files generated by the
 * task after its execution.
 *
 */
object ExternalBuilder {

  def apply[T](l: Lens[T, External]): ExternalBuilder[T] = new ExternalBuilder[T] {
    override def inputFiles = l composeLens Focus[External](_.inputFiles)
    override def resources = l composeLens Focus[External](_.resources)
    override def outputFiles = l composeLens Focus[External](_.outputFiles)
    override def inputFileArrays = l composeLens Focus[External](_.inputFileArrays)
  }

}

trait ExternalBuilder[T] { builder â‡’
  def inputFiles: Lens[T, Vector[InputFile]]
  def inputFileArrays: Lens[T, Vector[InputFileArray]]
  def outputFiles: Lens[T, Vector[OutputFile]]
  def resources: Lens[T, Vector[Resource]]
}
